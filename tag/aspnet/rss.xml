<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
      <title>https://github.com/qbikez</title>
   
   <link>http://heavymetaldev.com</link>
   <description>Developer stories from the trenches.</description>
   <language>en-uk</language>
   <managingEditor> qbik</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
	  <title>Azure MIME mapping</title>
	  <link>//azure-mime-mapping</link>
	  <author>qbik</author>
	  <pubDate>2015-11-18T00:00:00+01:00</pubDate>
	  <guid>//azure-mime-mapping</guid>
	  <description><![CDATA[
	     <p>It turns out that Azure Websites have some MIME mapping problems that a default IIS installation has not.</p>

<p>I’ve been playing around with serving files through asp.net mvc. Basically, what I did was:</p>

<p>```csharp
public ActionResult GetFile(string path)
        {
            if (string.IsNullOrEmpty(path))
            {
                return HttpNotFound();
            }</p>

<div class="highlighter-rouge"><pre class="highlight"><code>        var fileName = MapFilePath(path);
        return File(fileName, System.Web.MimeMapping.GetMimeMapping(fileName)); 
    } ```
</code></pre>
</div>

<p>This works fine on my local machine (using IIS Express). Surprisingly, after publishing to Azure Website, I received a download alert instead of file content inside the browser. After some quick debugging, I found out that the file extension (<code class="highlighter-rouge">.xhtml</code> in this case) was being mapped to <code class="highlighter-rouge">application/octet-stream</code> instead of <code class="highlighter-rouge">application/xhtml+xml</code>. Interestingly, GetMimeMapping uses IIS MIME mapping: http://www.c-sharpcorner.com/Blogs/47150/. 
So, my local IIS has this extension mapped and Azure has not. This may be a cool feature, but in this case it just gets in my way. So, instead of adding mappings to my web.config, I decided to hardcode the mapping dictionary, using this little class: https://github.com/samuelneff/MimeTypeMap/blob/master/src/MimeTypeMap.cs 
This gist is similar, but it does not containt xhtml: https://gist.github.com/atifaziz/14553</p>

<p>Now, that’s better.</p>


	  ]]></description>
	</item>


</channel>
</rss>

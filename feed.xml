<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Heavy Metal Dev - Articles</title>
    <description>Developer stories from the trenches.</description>
    <link>
    http://heavymetaldev.com</link>
    
      
      <item>
        <title>Measuring PowerShell hashtables performance</title>
        
          <description>How to instrument PowerShell scripts and find performance bottlenecks? And how PS hashtables can bite you.</description>
        
        <pubDate>Fri, 03 Mar 2017 00:00:00 +0100</pubDate>
        <link>
        http://heavymetaldev.com/powershell-hashtables</link>
        <guid isPermaLink="true">http://heavymetaldev.com/powershell-hashtables</guid>
      </item>
      
    
      
      <item>
        <title>Mercurial repository conversion</title>
        
          <description>&lt;p&gt;Have you ever needed to split a repository, or take out just a few directories, retaining their history? 
Or maybe your repo contains too many (possibly unrelated) projects? 
Or has grown so big that you can’t even clone it?&lt;/p&gt;

</description>
        
        <pubDate>Sun, 22 Jan 2017 00:00:00 +0100</pubDate>
        <link>
        http://heavymetaldev.com/hg-repo-conversion</link>
        <guid isPermaLink="true">http://heavymetaldev.com/hg-repo-conversion</guid>
      </item>
      
    
      
      <item>
        <title>Configuring mercurial keyring</title>
        
          <description>&lt;p&gt;If you don’t want to type your username and password everytime you do a pull or push to mercurial, you have to store your credentials somewhere. On windows, the commandline &lt;code class=&quot;highlighter-rouge&quot;&gt;hg&lt;/code&gt; does not store credentials (you have to enter them every time). If you configure credentials in TortoiseHG, the username and password will be stored in plain-text, in &lt;em&gt;mercurial.ini&lt;/em&gt; file. This is not the most secure way to do it, and mercurial will even warn you about that.&lt;/p&gt;

</description>
        
        <pubDate>Mon, 09 Jan 2017 00:00:00 +0100</pubDate>
        <link>
        http://heavymetaldev.com/configuring-mercurial-keyring</link>
        <guid isPermaLink="true">http://heavymetaldev.com/configuring-mercurial-keyring</guid>
      </item>
      
    
      
      <item>
        <title>Build private mercurial subrepos on Appveyor</title>
        
          <description>&lt;p&gt;Appveyor is a great CI service for Windows apps. It’s simple, free (for open-source) and easy to setup. Sometimes even public, open source projects may want to have private subrepositories. Appveyor supports such a setup and in this post I will show you, how to configure private subrepo for mercruial.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 08 Jan 2017 00:00:00 +0100</pubDate>
        <link>
        http://heavymetaldev.com/appveyor-private-subrepos</link>
        <guid isPermaLink="true">http://heavymetaldev.com/appveyor-private-subrepos</guid>
      </item>
      
    
      
      <item>
        <title>Powershell on Linux</title>
        
          <description>Powershell is now Open Source. This perfectly complies with “Microsoft loves Linux” philosophy. Hardcore Bash users will probably ignore it anyway, but for many PowerShell fans that also work with Linux systems it will be a big treat.</description>
        
        <pubDate>Wed, 24 Aug 2016 00:00:00 +0200</pubDate>
        <link>
        http://heavymetaldev.com/powershell-on-linux</link>
        <guid isPermaLink="true">http://heavymetaldev.com/powershell-on-linux</guid>
      </item>
      
    
      
      <item>
        <title>Adding Web Deploy permissions using PowerShell</title>
        
          <description>&lt;p&gt;Web Deploy is a great way to publish websites if you use Windows + IIS hosting, especially inside company’s infrastructure.&lt;/p&gt;

&lt;p&gt;[Microsoft.Web.Management.Server.ManagementAuthorization]::Grant($username, “$site”, $false)&lt;/p&gt;
</description>
        
        <pubDate>Sun, 07 Aug 2016 00:00:00 +0200</pubDate>
        <link>
        http://heavymetaldev.com/iis-web-deploy-permissions</link>
        <guid isPermaLink="true">http://heavymetaldev.com/iis-web-deploy-permissions</guid>
      </item>
      
    
      
      <item>
        <title>Migrating Asp.Net 5 rc1 to Asp.Net Core 1.0.0</title>
        
          <description>&lt;p&gt;Net Core 1.0.0 has been released some time ago and is here to stay. Maybe it’s time to move “old” &lt;code class=&quot;highlighter-rouge&quot;&gt;dnx&lt;/code&gt; projects forward and switch to &lt;code class=&quot;highlighter-rouge&quot;&gt;dotnet&lt;/code&gt;? Because, as someone avesome said: &lt;em&gt;new is always better!&lt;/em&gt;&lt;/p&gt;

</description>
        
        <pubDate>Sat, 30 Jul 2016 12:18:00 +0200</pubDate>
        <link>
        http://heavymetaldev.com/dnx-to-dotnet-migration</link>
        <guid isPermaLink="true">http://heavymetaldev.com/dnx-to-dotnet-migration</guid>
      </item>
      
    
      
      <item>
        <title>.Net Core 1.0 Released!</title>
        
          <description>&lt;p&gt;This came as a little surprise for me, especially that rc2 was released not so long ago, but here it is! &lt;a href=&quot;http://www.hanselman.com/blog/NETCore10IsNowReleased.aspx&quot;&gt;.Net Core 1.0 is finally released&lt;/a&gt;.&lt;/p&gt;

</description>
        
        <pubDate>Tue, 28 Jun 2016 00:00:00 +0200</pubDate>
        <link>
        http://heavymetaldev.com/net-core-1-0-released</link>
        <guid isPermaLink="true">http://heavymetaldev.com/net-core-1-0-released</guid>
      </item>
      
    
      
      <item>
        <title>Sharing code between aspnet5 and &quot;old&quot; .net</title>
        
          <description>&lt;p&gt;If you want to share some common code between &lt;code class=&quot;highlighter-rouge&quot;&gt;aspnet5&lt;/code&gt; and regular &lt;code class=&quot;highlighter-rouge&quot;&gt;csproj&lt;/code&gt; projects, you basically have three options:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;create a nuget from the common library and push it to a shared nuget repository&lt;/li&gt;
  &lt;li&gt;use &lt;code class=&quot;highlighter-rouge&quot;&gt;dnu wrap&lt;/code&gt; to wrap existing &lt;code class=&quot;highlighter-rouge&quot;&gt;csproj&lt;/code&gt; into aspnet5 &lt;code class=&quot;highlighter-rouge&quot;&gt;project.json&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;maintain two versions of your shared project - a  &lt;code class=&quot;highlighter-rouge&quot;&gt;project.json&lt;/code&gt; for aspnet5 and a &lt;code class=&quot;highlighter-rouge&quot;&gt;csproj&lt;/code&gt; for regular .net&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The last option is the most error-prone and harder to maintain, so I will just ignore it.&lt;/p&gt;

</description>
        
        <pubDate>Thu, 03 Dec 2015 00:00:00 +0100</pubDate>
        <link>
        http://heavymetaldev.com/aspnet5-reference-csproj</link>
        <guid isPermaLink="true">http://heavymetaldev.com/aspnet5-reference-csproj</guid>
      </item>
      
    
      
      <item>
        <title>ReflectionTypeLoadException when running dnx (aspnet5)</title>
        
          <description>&lt;p&gt;Today I ran into a problem with starting my AspNet5 app. (for the record, I’m using aspnet version &lt;code class=&quot;highlighter-rouge&quot;&gt;1.0.0-beta8&lt;/code&gt;) This is what happened:&lt;/p&gt;

</description>
        
        <pubDate>Thu, 26 Nov 2015 00:00:00 +0100</pubDate>
        <link>
        http://heavymetaldev.com/aspnet5-reflectiontypeloadexception</link>
        <guid isPermaLink="true">http://heavymetaldev.com/aspnet5-reflectiontypeloadexception</guid>
      </item>
      
    
      
      <item>
        <title>Azure MIME mapping</title>
        
          <description>&lt;p&gt;It turns out that Azure Websites have some MIME mapping problems that a default IIS installation has not.&lt;/p&gt;

</description>
        
        <pubDate>Wed, 18 Nov 2015 00:00:00 +0100</pubDate>
        <link>
        http://heavymetaldev.com/azure-mime-mapping</link>
        <guid isPermaLink="true">http://heavymetaldev.com/azure-mime-mapping</guid>
      </item>
      
    
  </channel>
</rss>
